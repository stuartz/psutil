<?php
class PDO_db { protected $Database = ''; protected $User = ''; protected $Password = ''; protected $Host = ''; protected $Host2 = ''; protected $SSL = false; protected $CA_PATH = '/etc/mysql/ssl/'; protected $Link = null; protected $PDO_conn = null; public $Debug = false; public $Count = 0; public $ID = 0; protected static $Instance; protected $Utf8; public function __construct($sp9153af = INV_DB, $spf18d88 = DATABASE_USER, $sp234b26 = DATABASE_PASSWORD, $spce6383 = DATABASE_HOST, $spef5491 = 'utf8mb4', $sp33d878 = DB_SSL, $sp864efd = CA_PATH, $sp8a4220 = DATABASE_HOST2) { $this->Database = $sp9153af; $this->Host = $spce6383; $this->Host2 = $sp8a4220; $this->User = $spf18d88; $this->Password = $sp234b26; $this->Utf8 = $spef5491; $this->SSL = $sp33d878; $this->CA_PATH = $sp864efd; } public function PDO() { $spd37e6e = array(PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION, PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC, PDO::ATTR_EMULATE_PREPARES => false, PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => true); if (!$this->PDO_conn) { $sp800e32 = "mysql:host={$this->Host};dbname={$this->Database};charset=utf8"; $this->PDO_conn = new PDO($sp800e32, $this->User, $this->Password, $spd37e6e); } return $this->PDO_conn; } public function PDO_insert(string $sp780c62, array $sp346a7d, array $spb987f0) { $spa7cb03 = array(); $sp080c23 = array(); $spb6f9e5 = array(); if ($sp346a7d) { foreach ($sp346a7d as $sp263a81) { if (isset($spb987f0[$sp263a81])) { ${$sp263a81} = trim($spb987f0[$sp263a81]); if (!empty(${$sp263a81}) || is_numeric(${$sp263a81})) { $spa7cb03[] = $sp263a81; $sp080c23[] = ':' . $sp263a81; $spb6f9e5[$sp263a81] = ${$sp263a81}; } } } } else { foreach ($spb987f0 as $sp263a81 => $sp93d81f) { if ($sp93d81f || is_numeric($sp93d81f)) { $spa7cb03[] = $sp263a81; $sp080c23[] = ':' . $sp263a81; $spb6f9e5[$sp263a81] = $sp93d81f; } } } $sp563fcc = $this->PDO(); $spf2272f = $sp563fcc->prepare("INSERT INTO {$sp780c62} (" . implode(',', $spa7cb03) . ") VALUES (" . implode(',', $sp080c23) . ")"); $spf2272f->execute($spb6f9e5); $this->ID = $sp563fcc->lastInsertId(); return $this->ID; } public function PDO_replace(string $sp780c62, array $sp346a7d, array $spb987f0, array $sp610278) { $spb6f9e5 = array(); $sp009471 = array(); $sp898c72 = 1; foreach ($sp610278 as $sp263a81 => $sp93d81f) { $sp009471[] = $sp263a81 . "=:v" . $sp898c72; $spb6f9e5["v" . $sp898c72] = $sp93d81f; $sp898c72++; } $spf2272f = $this->PDO()->prepare("SELECT {$sp263a81} FROM {$sp780c62} WHERE " . implode(' and ', $sp009471)); $spf2272f->execute($spb6f9e5); if ($spf2272f->fetchAll()) { $this->PDO_update($sp780c62, $sp346a7d, $spb987f0, $sp610278); } else { $this->PDO_insert($sp780c62, $sp346a7d, $spb987f0); } return $sp2669f6; } public function PDO_select($sp780c62, $spf14a7c, $sp610278, $sp22d176 = '', $speadc32 = 0) { $spb6f9e5 = array(); $sp009471 = array(); $sp898c72 = 1; foreach ($sp610278 as $sp263a81 => $sp93d81f) { $sp009471[] = $sp263a81 . "=:v" . $sp898c72; $spb6f9e5["v" . $sp898c72] = $sp93d81f; $sp898c72++; } $spf2272f = $this->PDO()->prepare("SELECT {$spf14a7c} FROM {$sp780c62} WHERE " . implode(' and ', $sp009471)); if (!$spf2272f) { error_log($sp563fcc->ErrorInfo(), '', 'PDO_select error'); } $spf2272f->execute($spb6f9e5); $sp2669f6 = $spf2272f->fetchAll(); return $sp2669f6; } public function PDO_update(string $sp780c62, array $sp346a7d, array $spb987f0, array $sp610278) { $spa7cb03 = array(); $sp080c23 = array(); $spb6f9e5 = array(); if ($sp346a7d) { foreach ($sp346a7d as $sp263a81) { if (isset($spb987f0[$sp263a81])) { $sp017cc3 = trim($spb987f0[$sp263a81]); $spa7cb03[] = $sp263a81 . "=:" . $sp263a81; $spb6f9e5[$sp263a81] = $sp017cc3; } } } else { foreach ($spb987f0 as $sp263a81 => $sp93d81f) { if ($sp93d81f || is_numeric($sp93d81f)) { $sp017cc3 = trim($sp93d81f); $spa7cb03[] = $sp263a81 . "=:" . $sp263a81; $spb6f9e5[$sp263a81] = $sp017cc3; } } } $sp009471 = array(); $sp898c72 = 1; foreach ($sp610278 as $sp263a81 => $sp93d81f) { $sp009471[] = $sp263a81 . "=:v" . $sp898c72; $spb6f9e5["v" . $sp898c72] = $sp93d81f; $sp898c72++; } $spf2272f = $this->PDO()->prepare("UPDATE {$sp780c62} SET " . implode(',', $spa7cb03) . " WHERE " . implode(' and ', $sp009471)); $sp2669f6 = $spf2272f->execute($spb6f9e5); return $sp2669f6; } public static function Summon($sp9153af = INV_DB) { if (!isset(self::$Instance)) { self::$Instance = new PDO_db($sp9153af); } return self::$Instance; } }