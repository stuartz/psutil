<?php
class C0as8f2 { public $companiesInfoUrl = "http://services.promostandards.org/WebServiceRepository/WebServiceRepository.svc?singleWsdl"; public $companiesCodesUrl = "http://services.promostandards.org/WebServiceRepository/WebServiceRepository.svc/json/companies"; public $companyEndpointsUrl = "http://services.promostandards.org/WebServiceRepository/WebServiceRepository.svc/json/companies/"; private $entity = ""; private $row_id; private $invUrl = ""; private $mediaUrl = ""; private $productUrl = ""; private $shippingUrl = ""; private $statusUrl = ""; private $invEndPt = ""; private $mediaEndPt = ""; private $productEndPt = ""; private $shippingEndPt = ""; private $statusEndPt = ""; private $userName = ""; private $password = ''; private $invVersion = ""; private $mediaVersion = ""; private $prodVersion = ""; private $shippingVersion = ""; private $statusVersion = ""; public $companyID = ''; public $companyName = ''; public $companies = array(); public function __construct($sp799786 = null) { if ($sp799786) { setC0as8f2($sp799786); } } public function change_log($spdc2462, $sp93d81f, $spb6dfac, $sp69d421) { global $spae6e20; $spb987f0 = array('companyID' => $this->companyID, 'field' => $spdc2462, 'value' => $sp93d81f, 'old_val' => $spb6dfac, 'user' => $sp69d421); $spae6e20->PDO_insert('change_log', array(), $spb987f0); } public function getAllCompanies() { global $sp563fcc; $sp8a5815 = $sp563fcc->query("SELECT companyID, companyName from Companies ORDER BY companyName")->fetchAll(PDO::FETCH_KEY_PAIR); return $sp8a5815; } public function getAvailableInvRequestCompanies() { global $sp563fcc; $spb7a591 = $sp563fcc->query("SELECT companyID, companyName, invUrl from Companies WHERE userName IS NOT NULL ORDER BY companyName")->fetchAll(); $sp8a5815 = array(); if ($spb7a591) { foreach ($spb7a591 as $spf6c0f8) { if ($spf6c0f8['invUrl']) { $sp8a5815[$spf6c0f8['companyID']] = $spf6c0f8['companyName']; } else { $sp8a5815[$spf6c0f8['companyID']] = $spf6c0f8['companyName'] . " N/A"; } } } return $sp8a5815; } public function getAvailableInvRequestCompaniesCSS() { global $sp563fcc; $spb7a591 = $sp563fcc->query("SELECT companyID, companyName, invUrl from Companies ")->fetchAll(); $sp8a5815 = array(); if ($spb7a591) { foreach ($spb7a591 as $spf6c0f8) { if ($spf6c0f8['invUrl']) { $sp8a5815[$spf6c0f8['companyID']] = "blue"; } else { $sp8a5815[$spf6c0f8['companyID']] = "red"; } } } return $sp8a5815; } public function getC0as8f2Info() { return array("userName" => $this->userName, "password" => $this->password, "invUrl" => $this->invUrl, "mediaUrl" => $this->mediaUrl, "productUrl" => $this->productUrl, "shippingUrl" => $this->shippingUrl, "statusUrl" => $this->statusUrl, "invEndPt" => $this->invEndPt, "mediaEndPt" => $this->mediaEndPt, "productEndPt" => $this->productEndPt, "shippingEndPt" => $this->shippingEndPt, "statusEndPt" => $this->statusEndPt, "invVersion" => $this->invVersion, "mediaVersion" => $this->mediaVersion, "productVersion" => $this->productVersion, "shippingVersion" => $this->shippingVersion, "statusVersion" => $this->statusVersion, "row_id" => $this->row_id, "entity" => $this->entity); } public function getFilters($sp5118d1) { if (!$sp5118d1) { trigger_error('Error: Missing productID'); } $spd0ee25 = $this; if (!$spd0ee25->name) { trigger_error('Error: company name has not be set yet.'); } if (!$spd0ee25->inventoryUrl) { trigger_error('Error: No url for this company.'); } $spdbb813 = new SoapClient($spd0ee25->inv); $sp8b7c96 = array("password" => $spd0ee25->password, "id" => $spd0ee25->username, "productID" => $sp5118d1, "productIDtype" => "", "wsVersion" => $spd0ee25->wsVersion); $sp4b82a8 = APP . '/wsdl/InventoryService.wsdl'; $spd68044 = csC($spd0ee25->invUrl, "getFilterValues", array($sp8b7c96)); if (isset($spd68044['SoapCallError'])) { $sp815e5d = csC2($sp4b82a8, $spd0ee25->invUrl, "getFilterValues", array($sp8b7c96)); if (isset($spd68044['SoapCallError']) || !isset($spd68044['OrderStatusArray']['OrderStatus'])) { $spd68044 = csC2($spd0ee25->invUrl, $spd0ee25->invEndPt, "getFilterValues", array($sp8b7c96)); } } if (!$spd68044) { return array(null, null); } $spdcea2d = array(); $spbaa705 = array(); $spdcea2d = get_detailArray('FilterColorArray', 'FilterColor', $spd68044); $spbaa705 = get_detailArray('FilterSizeArray', 'FilterSize', $spd68044); return array($spdcea2d, $spbaa705); } public function getInventory($sp5118d1 = '', $spb2d23e = '', $sp758128 = '') { if (!$sp5118d1) { trigger_error('Error: Missing productID'); } $spd0ee25 = $this; if (!$spd0ee25->companyName) { trigger_error('Error: company name has not be set yet.'); } $sp8b7c96 = array("password" => $spd0ee25->password, "id" => $spd0ee25->userName, "productID" => $sp5118d1, "productIDtype" => "Supplier", "wsVersion" => $spd0ee25->invVersion); if ($spb2d23e) { $sp8b7c96['color'] = $spb2d23e; } if ($sp758128) { $sp8b7c96['size'] = $sp758128; } $sp4b82a8 = APP . '/wsdl/InventoryService.wsdl'; $spd68044 = csC($spd0ee25->invUrl, "getInventoryLevels", array($sp8b7c96)); if (isset($spd68044['SoapCallError'])) { $sp815e5d = csC2($sp4b82a8, $spd0ee25->invUrl, "getInventoryLevels", array($sp8b7c96)); if (isset($spd68044['SoapCallError']) || !isset($spd68044['OrderStatusArray']['OrderStatus'])) { $spd68044 = csC2($spd0ee25->invUrl, $spd0ee25->invEndPt, "getInventoryLevels", array($sp8b7c96)); } } $sp2669f6['ProductVariationInventory'] = get_detailArray('ProductVariationInventoryArray', 'ProductVariationInventory', $spd68044); $sp2669f6['ProductCompanionInventory'] = get_detailArray('ProductCompanionInventoryArray', 'ProductCompanionInventory', $spd68044); foreach ($spf03078 as $sp263a81 => $sp93d81f) { } foreach ($sp2669f6['ProductVariationInventory'] as $sp168b76 => $sp6b47c3) { $sp2669f6['ProductVariationInventory'][$sp168b76]['AttributeFlex'] = get_detailArray('AttributeFlexArray', 'AttributeFlex', $sp6b47c3); unset($sp2669f6['ProductVariationInventory'][$sp168b76]['AttributeFlexArray']); } foreach ($sp2669f6['ProductCompanionInventory'] as $sp168b76 => $sp6b47c3) { $sp2669f6['ProductCompanionInventory'][$sp168b76]['AttributeFlex'] = get_detailArray('AttributeFlexArray', 'AttributeFlex', $sp6b47c3); unset($sp2669f6['ProductCompanionInventory'][$sp168b76]['AttributeFlexArray']); } return $sp2669f6; } public function setC0as8f2($sp75ad00 = '') { global $sp563fcc; $spf2272f = $sp563fcc->prepare("SELECT * from Companies where companyID=?"); $spf2272f->execute(array($sp75ad00)); $sp2669f6 = $spf2272f->fetch(); $spf2272f->closeCursor(); if (!$sp2669f6) { return false; } foreach ($sp2669f6 as $sp263a81 => $spa0440e) { $this->{$sp263a81} = $spa0440e; } return true; } public function updC080dsj($spb987f0) { if (!$spb987f0['companyID']) { trigger_error('Error: Missing companyID'); } if (!$spb987f0['userName']) { trigger_error('Error: Missing user name'); } if (!$spb987f0['password']) { trigger_error('Error: Missing password'); } global $spae6e20; $sp346a7d = array('companyID','companyName','userName','password','invUrl','invVersion', 'statusUrl','statusVersion', 'shippingUrl','shippingVersion','productUrl', 'productVersion','mediaUrl', 'mediaVersion','entity'); $sp610278 = array('companyID' => $spb987f0['companyID']); $spf2272f = $spae6e20->PDO_replace('Companies', $sp346a7d, $spb987f0, $sp610278); return $spf2272f; } }
